
name: Build & Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        target:
          [
            x86_64-apple-darwin,
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            aarch64-apple-darwin,
          ]

        include:
          - target: x86_64-apple-darwin
            os: macos
          - target: x86_64-unknown-linux-gnu
            os: ubuntu
          - target: aarch64-unknown-linux-gnu
            os: ubuntu
          - target: aarch64-apple-darwin
            os: macos
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fake executable
        run: |
          mkdir -p target/${{ matrix.target }}/release
          touch target/${{ matrix.target }}/release/asdasdsa

      - name: extract binary name
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          TARGET=${{ matrix.target }}
          BINARY_NAME=asdasdsa_${VERSION}_${TARGET}

          echo $BINARY_NAME

          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
      - name: rename binary
        run: |
            mv target/${{ matrix.target }}/release/asdasdsa target/${{ matrix.target }}/release/${BINARY_NAME}

      - name: check binary name 
        run: ls -latr target/${{ matrix.target }}/release

      - name: Compress file 
        run: |
          tar -czvf target/${{ matrix.target }}/release/${BINARY_NAME}.tar.gz -C target/${{ matrix.target }}/release/ ${BINARY_NAME}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}.tar.gz
          path: target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}.tar.gz
          if-no-files-found: error

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: target/artifacts
          merge-multiple: true
      - name: tmp cs
        run: |
          cd target/artifacts
          shasum -a 256 * >> checksums.txt
          cat checksums.txt
          rm -f checksums.txt

      - name: Create checksum
        run: |
          cd target/artifacts
          for file in *; do
            shasum -a 256 $file > $(basename $file .tar.gz).sha256
          done

      - name: check artifacts
        run: ls -latr target/artifacts 

      - name: Update Homebrew formula
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token:  ${{ secrets.GH_TOKEN }}
          tap: rvigo/homebrew-asdasdsa
          formula: asdasdsa
          revision: ${{ github.sha }}
