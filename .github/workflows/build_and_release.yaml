name: Build & Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  cache:
    name: setup-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.76.0
        with:
          components: rustfmt,clippy
      - name: build
        run: |
          cargo build
      - name: check target
        run: |
          ls -latr 
          ls -latr target/
      - name: Cargo cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  format:
    name: fmt
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.76.0
        with:
          components: rustfmt
      - name: Cargo cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Check formatting
        run: |
          cargo fmt --all -- --check

  test:
    name: test
    runs-on: ubuntu-20.04
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.76.0
      - name: Cargo cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: check target
        run: |
          echo "Checking CWD"
          ls -latr
      - name: Unit Test
        run: |
          cargo test 
        env:
          RUST_BACKTRACE: 1

  build:
    name: Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        target:
          [
            x86_64-apple-darwin,
            aarch64-apple-darwin,
          ]
        include:
          - target: x86_64-apple-darwin
            os: macos
          - target: aarch64-apple-darwin
            os: macos
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install toolchain for ${{ matrix.target }}
        uses: dtolnay/rust-toolchain@1.76.0
        with:
          targets: ${{ matrix.target }}
      - name: Build
        run: |
            cargo build --release --bins --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cl-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

        
  release:
      name: Release
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout releaser
          uses: actions/checkout@v4
          with:
            repository: rvigo/rustreleaser
            path: releaser
        - run: |
            pwd
            ls -latr 

        
        - name: Install toolchain for ${{ matrix.target }}
          uses: dtolnay/rust-toolchain@1.76.0
          with:
            targets: ${{ matrix.target }}
        - name: Build releaser
          run: |
              cd releaser
              cargo build --release 
        - run: |
            pwd
            ls -latr
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Download darwin_arm64
          uses: actions/download-artifact@v3
          with:
            name: cl-aarch64-apple-darwin
            path: target/aarch64-apple-darwin/release/
        - name: Download darwin_amd64_v1
          uses: actions/download-artifact@v3
          with:
            name: cl-x86_64-apple-darwin
            path: target/x86_64-apple-darwin/release/
        - name: Release
          run: |
               ./${GITHUB_WORKSPACE}/releaser/target/release/rustreleaser