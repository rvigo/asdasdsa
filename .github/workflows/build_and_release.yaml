name: Build & Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
          ]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install toolchain for ${{ matrix.target }}
        uses: dtolnay/rust-toolchain@1.76.0
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        if: ${{ matrix.os == 'ubuntu' }}
        run: cargo install cross
      - name: Build with Cross
        run: |
            cross build --release --bins --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: asdasdsa-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/
        
  release:
      name: Release
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout releaser
          uses: actions/checkout@v4
          with:
            repository: rvigo/rustreleaser
        
        - name: Install toolchain for ${{ matrix.target }}
          uses: dtolnay/rust-toolchain@1.76.0
          with:
            targets: ${{ matrix.target }}
        - name: Build releaser
          run: |
              cargo build --release 

        - run: |
            ls -latr
            sudo cp -R ./target/release/rustreleaser /usr/local/bin/. 
            ls -latr /usr/local/bin

        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        - run: |
            ls -latr

        - name: Download darwin_arm64
          uses: actions/download-artifact@v3
          with:
            name: asdasdsa-x86_64-unknown-linux-gnu
            path: target/x86_64-unknown-linux-gnu/release/
        
        - name: Release
          run: |
              rustreleaser
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}