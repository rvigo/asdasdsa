
name: Build & Release

permissions:
  contents: write

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        target:
          [
            x86_64-apple-darwin,
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            aarch64-apple-darwin,
          ]

        include:
          - target: x86_64-apple-darwin
            os: macos
            binary_name: cl_${{ github.ref_name }}_darwin_amd64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu
            binary_name: cl_${{ github.ref_name }}_linux_amd64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu
            binary_name: cl_${{ github.ref_name }}_linux_arm64
          - target: aarch64-apple-darwin
            os: macos
            binary_name: cl_${{ github.ref_name }}_darwin_arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fake executable
        run: |
          mkdir -p target/${{ matrix.target }}/release
          touch target/${{ matrix.target }}/release/cl

      - name: rename binary
        run: |
            mv target/${{ matrix.target }}/release/cl target/${{ matrix.target }}/release/cl-${{ matrix.binary_name }}

      - name: check binary name 
        run: ls -latr target/${{ matrix.target }}/release

      - name: Create tar.gz file
        run: |
          tar -czvf target/${{ matrix.target }}/release/cl-${{ matrix.binary_name }}.tar.gz -C target/${{ matrix.target }}/release/ cl-${{ matrix.binary_name }}

      - name: check tar.gz file 
        run: ls -latr target/${{ matrix.target }}/release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cl-${{ matrix.binary_name }}.tar.gz
          path: target/${{ matrix.target }}/release/cl-${{ matrix.binary_name }}.tar.gz
          if-no-files-found: error

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: target/artifacts
          merge-multiple: true

      - name: Create checksum
        run: |
          cd target/artifacts
          touch checksum.txt
          for FILE in $(ls -1); do
            shasum -a 256 $FILE >> checksum.txt
          done
          cat checksum.txt

      - name: check artifacts
        run: ls -latr target/artifacts 
